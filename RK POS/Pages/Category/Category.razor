@page "/Category"
@inject NavigationManager NavigationManager
@inject IDialogService CategoryService
@inject IDialogService EditCategory
@inject IDialogService AddCategory

<MudContainer>
    <div class="row mt-3" style="background:#594AE2;">
        <!-- Apply margin-top using Bootstrap utility class -->
        <div class="col-md-6" >
        
            <h2 style="color:white;">Product List</h2>
        </div>
        <div class="col-md-6">
            <MudButton @onclick="OpenAddDialog" Variant="Variant.Filled" Color="Color.Primary" >
               Add Product
            </MudButton>
         </div>
       
    </div>
     <MudGrid>
         <MudItem>
            <MudSelect Label="Show Entities" @bind-Value="selectedEntity">
                @foreach (var entity in entities)
                {
                    <MudSelectItem Value="@entity">@entity</MudSelectItem>
                }
            </MudSelect>
         </MudItem>
     </MudGrid>
    <table class="product-table">
        <thead>
            <tr></tr>
            <tr>
                <th>SL</th>
                <th>Category Type</th>
                <th colspan="2">Product Name</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <!-- Add rows dynamically based on your product data -->
            <tr>
                <td>1</td>
                <td>Category 1</td>
                <td colspan="2">Product 1</td>
                <td>23</td>
                <td>
                    <!-- Add/Edit/Delete buttons or actions go here -->
                    <MudButton @onclick="OpenEditDialog" Variant="Variant.Filled" Color="Color.Primary">
                       Edit
                    </MudButton>
                    <MudButton @onclick="OpenDialog" Variant="Variant.Filled" Color="Color.Error">
                        Delete
                    </MudButton>
                </td>
            </tr>
            <tr>
                <td>2</td>
                <td>Catefory 2 </td>
                <td colspan="2">Product 2</td>
                <td>11</td>
                <td>
                    <!-- Add/Edit/Delete buttons or actions go here -->
                    <MudButton Color="Color.Primary">Edit</MudButton>
                    <MudButton Color="Color.Error" @onclick="AddNewProduct">Delete</MudButton>
                </td>
            </tr>
            <!-- Add more rows as needed -->
        </tbody>
    </table>
</MudContainer>

<style>
    .header {
        background-color: #007BFF; /* Set the header background color to blue */
        padding: 20px;
        text-align: center;
        color: white;
    }

    .product-container {
        max-width: 1200px; /* Set the maximum width of the content */
        margin: 0 auto; /* Center the content on the page */
    }

    .product-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px; /* Adjust the margin as needed */
    }

        .product-table th, .product-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
</style>

@code {

    private string selectedEntity; // Assuming you have a property to bind to the dropdown

    private List<string> entities = new List<string>
    {
        "Entity1", "Entity2", "Entity3" // Add your entities
    };
    private void RedirectToEditProduct()
    {
        // Redirect to the "AddProduct" page or any other page
        NavigationManager.NavigateTo("/EditProduct");
    }

    private void AddNewProduct()
    {
        // Placeholder method for adding a new product
        // Add logic to handle adding a new product
        // For example, you can show a dialog or navigate to a new page
        // ...
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        CategoryService.Show<CategoryService>("Delete", options);
    }
    private void OpenEditDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        CategoryService.Show<AddCategory>("Edit", options);
    }
    private void OpenAddDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        CategoryService.Show<AddCategory>("Add Product", options);
    }
}
